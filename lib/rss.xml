<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Nosov Blog]]></title><description><![CDATA[Obsidian digital garden]]></description><link>https://nosoff.info/</link><image><url>https://nosoff.info/lib/media/favicon.png</url><title>Nosov Blog</title><link>https://nosoff.info/</link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Sun, 14 Jul 2024 14:32:40 GMT</lastBuildDate><atom:link href="https://nosoff.info/lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Sun, 14 Jul 2024 14:32:34 GMT</pubDate><copyright><![CDATA[Roman A. Nosov]]></copyright><ttl>60</ttl><dc:creator>Roman A. Nosov</dc:creator><item><title><![CDATA[Простой QR сканнер своими руками без мам, пап и кредитов на React Native]]></title><description><![CDATA[ 
 <br><br><br>
<br>Сканировать qr код с текстом.
<br>Собирать url в формате mydomain.com?code={отсканированный код}
<br>Открывать собранный url в браузере по умолчанию в системе. 
<br><br><br>На яблочных смартфонах: это можно реализовать вообще без кода. Через стандартное приложение shortcuts. Там это можно сделать в несколько блоков-действий:<br><img alt="../../../../Assets/QR сканнер/photo_2024-03-05_23-49-50.jpg" src="https://nosoff.info/lib/media/photo_2024-03-05_23-49-50.jpg"><br><br>С этим сложнее: на этой операционке нет такого прекрасного механизма. Но можно воспользоваться готовыми приложениями по сканированию qr кодов, которые в настройках позволяют указать кастомные url для "действий" после сканирования QR.<br>Из тех, что нашел:<br>
<br><a data-tooltip-position="top" aria-label="https://play.google.com/store/apps/details?id=com.gamma.scan&amp;hl=en&amp;gl=US" rel="noopener" class="external-link" href="https://play.google.com/store/apps/details?id=com.gamma.scan&amp;hl=en&amp;gl=US" target="_blank">QR &amp; Barcode Scanner от <strong></strong></a>Gamma Play
<br><a data-tooltip-position="top" aria-label="https://play.google.com/store/apps/details?id=com.teacapps.barcodescanner&amp;hl=en&amp;gl=US" rel="noopener" class="external-link" href="https://play.google.com/store/apps/details?id=com.teacapps.barcodescanner&amp;hl=en&amp;gl=US" target="_blank">QR &amp; Barcode Reader от <strong></strong></a>TeaCapps
<br>Но они систематически проигрывают рекламу, а за нормальную версию придётся заплатить.<br><br>На яблоке -- более чем устраивает. На андроиде приходится запускать около-мусорные приложения. Хотелось бы единого подхода для всех платформ.<br><br>Чтобы не изобретать велосипеды, пишем на react-native с компонентами от expo. У них как раз есть уже написанный сканнер qr кодов. <br><br>Идём <a data-tooltip-position="top" aria-label="https://reactnative.dev/docs/environment-setup" rel="noopener" class="external-link" href="https://reactnative.dev/docs/environment-setup" target="_blank">сюда</a>, и видим, что для создания проекта нам нужна <a data-tooltip-position="top" aria-label="https://nodejs.org/en/download/" rel="noopener" class="external-link" href="https://nodejs.org/en/download/" target="_blank">node.js</a> на компьютере.<br>
А после установки, нужно лишь выполнить команду<br>npx create-expo-app MyProjectName
Copy<br><br>Идём <a data-tooltip-position="top" aria-label="https://docs.expo.dev/versions/latest/sdk/camera-next/#component" rel="noopener" class="external-link" href="https://docs.expo.dev/versions/latest/sdk/camera-next/#component" target="_blank">сюда</a> и видим, что у нас есть существующий компонент от expo, который умеет работать с камерой и qr кодами. И при скане QR он дёргает заданный нами callback. <br><br>Устанавливаем нужные зависимости<br>npx expo install expo-camera
Copy<br>В app.json дописываем тексты для запроса пермишнов:<br>{
  "expo": {
    "plugins": [
      [
        "expo-camera",
        {
          "cameraPermission": "Allow $(PRODUCT_NAME) to access your camera",
        }
      ]
    ]
  }
}
Copy<br>Этот параметр будет выпрашивать у айфоноюзера выдать разрешения на использование камеры приложением. <br><br>import { CameraView, useCameraPermissions } from 'expo-camera/next';

export default fucntion App(){
	...
	const [permission, requestPermission] = useCameraPermissions();
	const [qrContent, setQrContent] = useState(null);
	...
	requestPermission();

	if (!permission){
		... // обработка ситуации, когда пользователь -- жадиниа
	}

	const gotoLink = () =&gt; Linking.openURL(qrContent);
	const onBarcodeScanned = scanResult =&gt; setQrContent('http://mydomain.com/code/' + scanResult.data); 

	return (
    &lt;View style={styles.container}&gt;
      &lt;CameraView style={styles.cameraView}
        barCodeScannerSettings={{ barCodeTypes: ["qr"], }}
        onBarcodeScanned={onBarcodeScanned}&gt;
      &lt;/CameraView&gt;
      &lt;Button style={styles.btn} title={qrContent} onPress={gotoLink} /&gt;
    &lt;/View&gt;
	 );
}
Copy<br>Сначала дёргаем хук, запрашивающий полномочия на камеру, если они ещё не были предоставлены пользователем. <br><br>
<br>gotoLink -- будет отрабатывать по нажатию на кнопку на экране, и редиректить пользователя на нужный нам URL
<br>onBarcodeScanned(scanResult) -- будет вызываться, когда произойдет успешное сканирвоание qr кода нашим встроенным модулем next/camera
<br><br>Внутри гланой вью у нас почти-ничего не будет. Лишь CameraView, которая будет отвечать за отображение картинки с камеры и сканирование QR кодов, и Button, по нажатию на которую пользователя будет перебрасывать на нужный нам сайт.<br>Собсна всё. Базовый скелет приложения готов. Осталось причесать, сделать разные красивости и экран с настройками, где можно было бы настраивать нужный нам домен. <br>По поводу <a data-tooltip-position="top" aria-label="https://docs.expo.dev/build/setup/" rel="noopener" class="external-link" href="https://docs.expo.dev/build/setup/" target="_blank">сборки итогового билда</a> приложения и выкладывания его в маркеты -- будет отдельный пост. ]]></description><link>https://nosoff.info/blogposts/production/shorts/простой-qr-сканнер-своими-руками-без-мам,-пап-и-кредитов-на-react-native.html</link><guid isPermaLink="false">BlogPosts/Production/Shorts/Простой QR сканнер своими руками без мам, пап и кредитов на React Native.md</guid><dc:creator><![CDATA[Roman A. Nosov]]></dc:creator><pubDate>Sun, 14 Jul 2024 14:20:55 GMT</pubDate><enclosure url="https://nosoff.info/lib/media/photo_2024-03-05_23-49-50.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://nosoff.info/lib/media/photo_2024-03-05_23-49-50.jpg&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[http сервер для статики одной командой]]></title><description><![CDATA[ 
 <br>Для того, чтобы всё работало -- нужна нода. Но на этом все зависимости заканчиваются.<br>Нужно лишь в нужном месте выполнить одну команду <br>npx http-server -o ./
Copy<br>Это установит одну js библиотечку и запустит сервер. Как раз то, что нам нужно для полного счастья.]]></description><link>https://nosoff.info/blogposts/production/shorts/http-сервер-для-статики-одной-командой.html</link><guid isPermaLink="false">BlogPosts/Production/Shorts/http сервер для статики одной командой.md</guid><dc:creator><![CDATA[Roman A. Nosov]]></dc:creator><pubDate>Tue, 05 Mar 2024 21:02:56 GMT</pubDate></item><item><title><![CDATA[Как заворачивать трафик в VPN на уровне роутера]]></title><description><![CDATA[ 
 <br>Может пригодиться для ситуаций, когда нужно подключиться к рабочему VPN, но подключения за пределами страны заблокированы админами. И получается, что нужен первый впн, который "забрасывает" трафик в нужную страну, и второй -- тот самый рабочий. <br>Или если ты находишься в России, и хочешь фрилансить на Upwork. Ибо в апворк запрещено заходить из "токсичных стран". И клиент апворка проверяет -- установлены ли VPN программы на твоём ПК.<br>&lt;TL;DR&gt;<br><br><br>
<br>Джедай домогается до всех магазинов электроники, и пытается выцепить роутер, который из-коробки поддерживает подключение по openVPN. (Их мало, они дорогие)
<br>Джедай берет из кладовки свой старый роутер, ставит на него Linux, и полноценный клиент openVPN.
<br>Первый путь слишком скучный, и вы с ним без меня справитесь. <br><br>Для этого берем и вбиваем его модель на <a data-tooltip-position="top" aria-label="https://firmware-selector.openwrt.org/" rel="noopener" class="external-link" href="https://firmware-selector.openwrt.org/" target="_blank">вот этом сайте</a>. Нашлось? Пол дела сделано! <br>Важно ещё не только модель роутера проверять, но и номер ревизии модели. Потому что иногда производители в одну и ту же модельку пихают совершенно разное железо, и если залить от другой ревизии, то у нас ничего не встанет. <br>Если не нашлось, то увы, придётся топать в магазин. Обзаведясь списком поддерживаемых устройств.<br>
(на самом деле, поддерживаются где-то 70% всех роутеров. Но на всякий случай полный список <a data-tooltip-position="top" aria-label="https://openwrt.org/supported_devices" rel="noopener" class="external-link" href="https://openwrt.org/supported_devices" target="_blank">вот тут</a>. А рекомендованные устройства <a data-tooltip-position="top" aria-label="https://openwrt.org/toh/recommended_routers" rel="noopener" class="external-link" href="https://openwrt.org/toh/recommended_routers" target="_blank">вот тут</a>.)<br><br>Если вы ещё не поняли, ставить будем именно эту сборку линукса для роутеров. Потому что у него есть удобная вебморда. Почти как стоковая, только лучше :)<br>Возвращаемся на сайт, <a data-tooltip-position="top" aria-label="https://firmware-selector.openwrt.org/" rel="noopener" class="external-link" href="https://firmware-selector.openwrt.org/" target="_blank">где мы проверяли модель роутера</a>. Видим внизу ссылки для скачивания сборок OpenWRT для нашей модели.<br>
<img alt="../../../Assets/VPN на роутере/pasted-image-20240712215939.png" src="https://nosoff.info/lib/media/pasted-image-20240712215939.png"><br>
Kernel и Sysupgrade нас не интересует. Нас интересует третий вариант, который будет называться по разному в зависимости от доступного на нашей модели способа установки. <br><br>
<br>Зайти в вебморду роутера, и во вкладке "обновление ПО" подсунуть ему сборку openWRT.
<br>Расшарить папку по TFTP, положить в неё openWRT и перезагрузиться
<br>Колдовать с serial-портом и консолью
<br><br>Скачал образ openWRT. И на всякий случай открыл WIKI по установке конкретно от моей модели роутера. У меня в шкафу валялся <a data-tooltip-position="top" aria-label="https://www.tp-link.com/ru/home-networking/wifi-router/tl-wr840n/" rel="noopener" class="external-link" href="https://www.tp-link.com/ru/home-networking/wifi-router/tl-wr840n/" target="_blank">TL-WR840N v4</a>.<br><a data-tooltip-position="top" aria-label="https://openwrt.org/toh/tp-link/tl-wr840n_v4" rel="noopener" class="external-link" href="https://openwrt.org/toh/tp-link/tl-wr840n_v4" target="_blank">Вики от него</a><br>На вики видно, что единственный способ как накатить на него WRT, это через расшаривание по TFTP с IP 192.168.0.66 и файл должен называться tp_recovery.bin<br>
<img alt="../../../Assets/VPN на роутере/pasted-image-20240712220921.png" src="https://nosoff.info/lib/media/pasted-image-20240712220921.png"><br><br>Из шкафа достаём небольшой ethernet кабель, втыкаем один конец в компьютер, второй в роутер. Отключаем dhcp на роутере (но скорее всего и без отключение заведётся).<br>И выставляем нашему компьютеру нужный IP:<br>
Тыкаем на иконку нашей сети в трее, далее "Параметры сети и Интернет"<br>
<img alt="../../../Assets/VPN на роутере/pasted-image-20240712221325.png" src="https://nosoff.info/lib/media/pasted-image-20240712221325.png"><br>Далее в открывшемся окне "Ethernet" -&gt; "Настройка параметров адаптера"<br><img alt="../../../Assets/VPN на роутере/pasted-image-20240712221509.png" src="https://nosoff.info/lib/media/pasted-image-20240712221509.png"><br>Далее из всех появившихся в том числе виртуальных подключений нужно найти нашу физическую сетевую карту. Обычно рядом с ней пишется номер модели.<br>Открываем её свойства.<br>
<img alt="../../../Assets/VPN на роутере/pasted-image-20240712221805.png" src="https://nosoff.info/lib/media/pasted-image-20240712221805.png"><br>И в свойствах IP версии 4 прописываем нужный нам IP адрес из вики<br>
<img alt="../../../Assets/VPN на роутере/pasted-image-20240712221847.png" src="https://nosoff.info/lib/media/pasted-image-20240712221847.png"><br>Для расшаривания папки будем использовать софтинку <a data-tooltip-position="top" aria-label="https://pjo2.github.io/tftpd64/" rel="noopener" class="external-link" href="https://pjo2.github.io/tftpd64/" target="_blank">tftpd64</a>. Качаем, распаковываем себе куда-нибудь на рабочий стол.<br>Рядом создаём какую-нибудь папку, в которую кладём скачанную ранее сборку openWRT и переименовываем файл в tp_recovery.bin.<br><img alt="../../../Assets/VPN на роутере/pasted-image-20240712222325.png" src="https://nosoff.info/lib/media/pasted-image-20240712222325.png"><br>Открыв программу от имени администратора выбираем папку, которую хотим расшарить, сетевую карту, по которой будет передача. <br>И в настройках отрубаем всю защиту нашей папки<br>
<img alt="../../../Assets/VPN на роутере/pasted-image-20240712222534.png" src="https://nosoff.info/lib/media/pasted-image-20240712222534.png"><br><br>У нас расшарена папка, роутер подключен к компьютеру по сети. Теперь берем и удерживаем кнопку reset на роутере, пока он не начнёт скачивать наш файл.<br>
(Процесс скачивание отобразится в окне программы)<br>После этого роутер перезагрузится и на какое-то время задумается. <br>Когда снова загорятся индикаторы включения и сети на роутере, можно будет приступать к установке openVPN клента.<br>Ахтунг! После сего действа не забудьте вернуть взад настройки IP на вашей сетевой карте, которые вы сделали до этого.<br><br>Если у нас всё прошло успешно, то по адресу <a data-tooltip-position="top" aria-label="http://192.168.1.1/" rel="noopener" class="external-link" href="http://192.168.1.1/" target="_blank">192.168.1.1</a> у нас будет доступна веб морда настроек роутера. Пытаемся открыть и видим вот такое окно:<br>
<img alt="../../../Assets/VPN на роутере/pasted-image-20240712223050.png" src="https://nosoff.info/lib/media/pasted-image-20240712223050.png"><br>Пользователь -- root<br>
Начальный пароль -- пустота<br>После первого захода роутер предложит придумать какой-нибудь пароль. Соглашаемся.<br><br>Если вы воткнули кабель напрямую от провайдера, то вам потребуется ввести всякие ваши логины и пароли во вкладке Network -&gt; Interfaces -&gt; WAN -&gt; Edit<br><img alt="../../../Assets/VPN на роутере/pasted-image-20240712223651.png" src="https://nosoff.info/lib/media/pasted-image-20240712223651.png"><br>В моём случае, я подключил кабель от другого роутера, там никакой защиты нет. <br><br>Идём во вкладку System -&gt; Software<br><img alt="../../../Assets/VPN на роутере/pasted-image-20240712223616.png" src="https://nosoff.info/lib/media/pasted-image-20240712223616.png"><br>Жмем на кнопку "Update Lists", и у нас выведется список доступных для установки программ. Вбиваем в поиск openvpn. И устанавливаем два пакета:<br><img alt="../../../Assets/VPN на роутере/pasted-image-20240712224453.png" src="https://nosoff.info/lib/media/pasted-image-20240712224453.png"><br>Первый -- сам клиент openVPN (это пакет openvpn-openssl или openvpn-mbedtls). Они ничем по поведению не отличаются. Разница лишь в библиотеках, которые они используют. <br>В моём случае openssl просто не помещался в память устройства, и я использовал другой)<br>Второй -- плагин, для того, чтобы у нас кнопочки по управлению VPN в вебморде появились.<br>Устанавливаем нажатием кнопок, сохраняемся, перезагружаем роутер через меню. (System -&gt; Reboot)<br><br>После всех проделанных махинаций в веб морде у нас появилась вкладка VPN.<br>Переходим в неё, удаляем все лишние стандартные записи, загружаем туда файл настроек VPN от вашего провайдера. <br><img alt="../../../Assets/VPN на роутере/pasted-image-20240712225058.png" src="https://nosoff.info/lib/media/pasted-image-20240712225058.png"><br><br>Чтобы забрасывать трафик в РФ можно купить <a data-tooltip-position="top" aria-label="https://vpn-naoborot.online/" rel="noopener" class="external-link" href="https://vpn-naoborot.online/" target="_blank">вот этот VPN</a> (выбирайте тариф "Быстрый")<br>Чтобы выбрасывать трафик из РФ в другие страны можно купить <a data-tooltip-position="top" aria-label="https://mullvad.net/en" rel="noopener" class="external-link" href="https://mullvad.net/en" target="_blank">вот этот VPN</a>. <br>Дальше следуя инструкциям от своего VPN провайдера, получаем кофиг-файл для openVPN, и загружаем на экран выше. <br>Прожимаем галочку "Enabled", нажимаем на "Start", потом сохраняемся. <br><br>Если до этого момента, из роутера неплохо шёл интернет, то он резко пропал. Ведь так?)<br>Дело в том, что прямой доступ к интернету теперь заблокирован впн-клиентом (что логично). А доступ через openVPN-посредника заблокирован фаерволом. Осталось рассказать ему, что это нужный трафик. <br>Идём в меню Network -&gt; Firewall -&gt; Настройки сети WAN -&gt; Edit<br>
<img alt="../../../Assets/VPN на роутере/pasted-image-20240712225737.png" src="https://nosoff.info/lib/media/pasted-image-20240712225737.png"><br>И во вкладке Advanced Settings в поле Covered devices проставляем галочку напротив tun0 (это и есть наш VPN туннель)<br>
<img alt="../../../Assets/VPN на роутере/pasted-image-20240712225843.png" src="https://nosoff.info/lib/media/pasted-image-20240712225843.png"><br>Сохраняемся, перезагружаемся, пробуем. <br>IP адрес и страну можно проверить <a data-tooltip-position="top" aria-label="https://2ip.ru/" rel="noopener" class="external-link" href="https://2ip.ru/" target="_blank">например здесь</a>.<br><img alt="../../../Assets/VPN на роутере/pasted-image-20240712230057.png" src="https://nosoff.info/lib/media/pasted-image-20240712230057.png"><br><br>Заходим в Network -&gt; Wireless -&gt; Edit<br><img alt="../../../Assets/VPN на роутере/pasted-image-20240712230248.png" src="https://nosoff.info/lib/media/pasted-image-20240712230248.png"><br>Mode -- Access Point<br>
SSID -- Имя вашей WIFI сетки<br>
Network -- Lan<br><img alt="../../../Assets/VPN на роутере/pasted-image-20240712230216.png" src="https://nosoff.info/lib/media/pasted-image-20240712230216.png"><br>Во вкладке Security<br>Encryption -- WPA2-PSK<br>
Cipher -- AES<br>
Key -- Ваш пароль от WIFI<br><img alt="../../../Assets/VPN на роутере/pasted-image-20240712230613.png" src="https://nosoff.info/lib/media/pasted-image-20240712230613.png"><br>Сохраняемся, применяем настройки, перезагружаемся. <br>Радуемся, что можем без какого-либо софта просто переключиться на другую WIFI точку и формально начать серфить интернет из-другой-страны. <br>&lt;/TL;DR&gt;<br><img alt="../../../Assets/VPN на роутере/pasted-image-20240712230828.png" src="https://nosoff.info/lib/media/pasted-image-20240712230828.png"><br>Всё<br>
<img alt="../../../Assets/VPN на роутере/pasted-image-20240712230928.png" src="https://nosoff.info/lib/media/pasted-image-20240712230928.png">]]></description><link>https://nosoff.info/blogposts/production/tldr/как-заворачивать-трафик-в-vpn-на-уровне-роутера.html</link><guid isPermaLink="false">BlogPosts/Production/TLDR/Как заворачивать трафик в VPN на уровне роутера.md</guid><dc:creator><![CDATA[Roman A. Nosov]]></dc:creator><pubDate>Sun, 14 Jul 2024 14:29:21 GMT</pubDate><enclosure url="https://nosoff.info/lib/media/pasted-image-20240712215939.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://nosoff.info/lib/media/pasted-image-20240712215939.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Экспортируем нужные нам данные из openStreetMap]]></title><description><![CDATA[<a class="tag" href="https://nosoff.info/?query=tag:танцы_с_бубном" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#танцы_с_бубном</a> <a class="tag" href="https://nosoff.info/?query=tag:работа_с_данными" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#работа_с_данными</a> 
 <br>Иногда возникает ситуация, в которой нам жизненно необходимо получить структурированные геоданные для своих проектов. Но где их искать? Делать на коленке парсер google maps?<br>На самом деле нет — всё куда прозаичнее. Их можно без зазрения совести скоммуниздить из прекрасного проекта openStreetMaps, попутно дополнив и исправив текущие данные в их базах.<br>Краткая справка для тех, кто в танке: openStreetMaps (или кратко OSM) — open source картографический проект, где каждый пользователь может чуть-чуть дорисовать карту. И по принципу "с миру по нитке" собирается свободная и бесплатная карта мира. (как с википедией, только карта)<br><br><img alt="Псс, парень, не хочешь немного геоданных?" src="https://nosoff.info/lib/media/meme.jpg"><br>Итак, в моём конкретном случае, мне нужно получить данные по всем железнодорожным станциям России: название, её код в какой-нибудь международной классификации + координаты. У вас это могут любые другие данные, принцип получения от этого толком не изменяется. <br>Для вытаскивания небольших данных из OSM есть онлайновый инструмент, который позволяет делать запросы и получать результат в JSON.<br>Но лично для меня этот язык запросов выглядит слишком странным + этот инструмент работает до невозможности медленно (а иногда благополучно лежит). <a data-tooltip-position="top" aria-label="https://overpass-turbo.eu/" rel="noopener" class="external-link" href="https://overpass-turbo.eu/" target="_blank">overpass-turbo</a><br>Но можно пойти куда более простым и понятным путём:<br>
<br>Скачать дамп всех данных OSM (или маленький кусочек нужной нам территории)
<br>Отфильтровать объекты (оставить только те типы объектов, которые нам нужны)
<br>Преобразовать в формат, который пригоден для загрузки в БД
<br><br>Чтобы придумать, как вытащить железнодорожные станции, нужно понимать, какие данные и с какой структурой там в принципе есть. <br>Есть очень хорошая <a data-tooltip-position="top" aria-label="https://habr.com/ru/post/146503/" rel="noopener" class="external-link" href="https://habr.com/ru/post/146503/" target="_blank">вводная статья на хабре</a>.<br><br>
А также имеется <a data-tooltip-position="top" aria-label="https://wiki.openstreetmap.org/wiki/Map_Features" rel="noopener" class="external-link" href="https://wiki.openstreetmap.org/wiki/Map_Features" target="_blank">официальная дока</a>.<br>Если кратко:<br>Дамп данных из OpenStreetMap можно представить в виде здоровенного XML файла, который содержит в себе помойку большое скопление тэгов трёх типов:<br>
<br>Точки (node)
<br>Линии (way)
<br>Отношения (relation)
<br>Внутри этих тэгов заполняется всякая информация о них в виде key:value.<br>Например:<br>
Давайте попробуем найти в интерфейсе OSM любую станцию и посмотреть, что там внутри.<br>Станция Шушары и её информация (слева в таблице):<br><img alt="Станция Шушары в интерфейсе" src="https://nosoff.info/lib/media/shushary.png"><br>Теперь посмотрим, как она выглядит в данных:<br>&lt;node id="1377619868" lat="59.8057985" lon="30.3884693" version="9" timestamp="2019-05-08T05:34:15Z" changeset="70007449" uid="474169" user="Yevgeny Gromov"&gt;
    &lt;tag k="esr:user" v="033004"/&gt;
    &lt;tag k="name" v="Шушары"/&gt;
    &lt;tag k="railway" v="station"/&gt;
    &lt;tag k="uic_ref" v="2005166"/&gt;
    &lt;tag k="wikidata" v="Q4528146"/&gt;
    &lt;tag k="wikipedia" v="ru:Шушары (станция)"/&gt;
&lt;/node&gt;
Copy<br>Данные хранятся в виде<br>&lt;tag k="key" v="value"&gt; 
Copy<br>внутри нашей точки "Шушары". А координаты хранятся в атрибутах самого тега "node" (lat/lon).<br>Замечаем, что признак "железнодорожная станция" — это вот такой тэг. На него и будем ориентироваться, когда будем фильтровать данные:<br>&lt;tag k="railway" v="station"/&gt;
Copy<br>Окей, мы поняли структуру, поняли что нам надо. Но где данные, Лебовски?<br><img alt="Ваши данные будут храниться здесь" src="https://nosoff.info/lib/media/meme-data.jpg"><br><br>Если у вас достаточно свободного пространства на жестком диске — можете попробовать выкачать весь мир <a data-tooltip-position="top" aria-label="https://wiki.openstreetmap.org/wiki/Downloading_data" rel="noopener" class="external-link" href="https://wiki.openstreetmap.org/wiki/Downloading_data" target="_blank">по официальным инструкциям</a>.<br>Либо можно зайти на сайт <a data-tooltip-position="top" aria-label="https://www.openstreetmap.org/" rel="noopener" class="external-link" href="https://www.openstreetmap.org/" target="_blank">openStreetMap</a>, открыть на карте нужный квадрат и нажать на "Экспорт".<br><br>Проблема России в том, что она достаточно большая, чтобы экспорт в интерфейсе openStreetMap падал из-за слишком большого количества данных, но всё ещё достаточно маленькая, чтобы ради неё выкачивать весь мир!<br>Специально для таких извращенцев, как мы, некоторые люди подготавливают "нарезку" мира на удобоваримые куски:<br>
<br>На <a data-tooltip-position="top" aria-label="https://download.geofabrik.de/" rel="noopener" class="external-link" href="https://download.geofabrik.de/" target="_blank">geofabrik.de</a> имеются нарезки по континентам
<br>На <a data-tooltip-position="top" aria-label="https://needgeo.com/" rel="noopener" class="external-link" href="https://needgeo.com/" target="_blank">needgeo.com</a> есть данные по странам пост-советского пространства.
<br>Последняя ссылка как раз нам очень пригодится! :) Выкачиваем оттуда файл RU.pbf (который весит сущие копейки — всего 3GB)<br><br>Для обработки нам понадобятся две консольные утилиты: osmconvert и osmfilter.<br>В debian/ubuntu устанавливаются очень просто одной командой:<br>sudo apt install osmctools
Copy<br>Для остальных ОС имеются ссылки на бинарники на официальной wiki <a data-tooltip-position="top" aria-label="https://wiki.openstreetmap.org/wiki/Osmfilter" rel="noopener" class="external-link" href="https://wiki.openstreetmap.org/wiki/Osmfilter" target="_blank">Osmfilter</a> <a data-tooltip-position="top" aria-label="https://wiki.openstreetmap.org/wiki/Osmconvert" rel="noopener" class="external-link" href="https://wiki.openstreetmap.org/wiki/Osmconvert" target="_blank">Osmconvert</a>.<br>Во-первых, нам нужно распаковать скачанный файл .pbf в пригодный для фильтрации формат.<br>osmconvert RU.pbf -o=RU.o5m
Copy<br>На выходе получим файл RU.o5m, который занимает уже 6.2GB. (но это всё ещё бинарный не человеко-читаемый файл.)<br>Теперь отбрасываем всё лишнее, оставляя только точки с нужным там тегом (который мы нашли в предыдущих параграфах):<br>osmfilter RU.o5m --keep="railway=station" &gt; stations.osm
Copy<br>Компьютер задумается на какое-то время, а затем заполнит файл stations.osm. Де-факто, уже почти всё. Мы на выходе получили XML файл со всеми нужными нам станциями (3Mb). <br>Попробуем проверить данные:<br>
Открываем в любом текстовом редакторе, который способен открывать большие текстовые файлы (vim), и бегло просматриваем станции:<br>И тут натыкаемся на станцию метро "Озерки". Что ж, формально — это жд, и формально — станция. Но не совсем то, что мне нужно. :)<br>&lt;node id="96459081" lat="60.0354511" lon="30.3210663" version="24" timestamp="2020-01-08T22:53:32Z" changeset="79358758" uid="217225" user="&amp;#38;ergio"&gt;
    &lt;tag k="colour" v="blue"/&gt;
    &lt;tag k="layer" v="-5"/&gt;
    &lt;tag k="name" v="Озерки"/&gt;
    &lt;tag k="name:de" v="Oserki"/&gt;
    &lt;tag k="name:en" v="Ozerki"/&gt;
    &lt;tag k="name:fi" v="Ozerki"/&gt;
    &lt;tag k="name:ru" v="Озерки"/&gt;
    &lt;tag k="network" v="Петербургский метрополитен"/&gt;
    &lt;tag k="operator" v="Петербургский метрополитен"/&gt;
    &lt;tag k="public_transport" v="station"/&gt;
    &lt;tag k="railway" v="station"/&gt;
    &lt;tag k="station" v="subway"/&gt;
    &lt;tag k="subway" v="yes"/&gt;
    &lt;tag k="transport" v="subway"/&gt;
    &lt;tag k="wikidata" v="Q2241386"/&gt;
    &lt;tag k="wikipedia" v="ru:Озерки (станция метро)"/&gt;
&lt;/node&gt;
Copy<br>Видим там целых три тега, которые свидетельствуют о том, что это метро. (зачем такая избыточность?)<br>&lt;tag k="station" v="subway"/&gt;
&lt;tag k="subway" v="yes"/&gt;
&lt;tag k="transport" v="subway"/&gt;
Copy<br>Фильтруем по этим тегам:<br>osmfilter stations.osm --drop="station=subway or subway=yes or transport=subway" &gt; not_subway.osm
Copy<br>Смотрим на выходной файл — выглядит так, словно успешно отфильтровали. Теперь осталось превратить xml файл в CSV, чтобы удобно залить в базу.<br>Смотрим на документацию по станциям и составляем список тегов, которые будем выводить в CSV:<br>
<a data-tooltip-position="top" aria-label="https://wiki.openstreetmap.org/wiki/RU:Tag:railway%3Dstation" rel="noopener" class="external-link" href="https://wiki.openstreetmap.org/wiki/RU:Tag:railway%3Dstation" target="_blank">railway:stations</a><br>Нужные нам столбцы: <br>
<br>id
<br>lat
<br>lon
<br>name
<br>uic_ref — уникальный код железнодорожной станции, присваиваемый UIC (International Union of Railways, Международный союз железных дорог).
<br>esr:user — уникальный код железнодорожной станции в Единой сетевой разметке (ЕСР, для станций Балтики и стран СНГ).
<br>Экспортируем (обратите внимание, что атрибуты самого node записываются через "@"):<br>osmconvert not_subway.osm --all-to-nodes --csv="@id @lat @lon name uic_ref esr:user" --csv=headline &gt; stations.csv
Copy<br>Теперь мы можем со спокойной совестью делать с этими данными, что душе угодно. Можем обрабатывать руками в EXCEL, можем залить в базу и использовать в своих разнообразных проектах. <br>Если найдете какие-то неточности в данных, очень рекомендуется исправить их не только у себя, а залить их также на саму OpenStreetMap. Так сказать, сделать свой маленький вклад в общее дело. :)<br>P.S. Мистическим образом, под железнодорожные станции ещё мимикрирует Волгоградский метротрам. Но его уже можно отфильтровать в итоговом CSV.<br><br><a class="internal-link" data-href="../../../Assets/Экспорт из openstreetmap/stations.csv" href="https://nosoff.info/assets/экспорт-из-openstreetmap/stations.csv" target="_self" rel="noopener">Итоговый CSV файл со станциями здесь.</a><br><a href="https://nosoff.info?query=tag:танцы_с_бубном" class="tag" target="_blank" rel="noopener">#танцы_с_бубном</a> <a href="https://nosoff.info?query=tag:работа_с_данными" class="tag" target="_blank" rel="noopener">#работа_с_данными</a>]]></description><link>https://nosoff.info/blogposts/production/tldr/экспортируем-нужные-нам-данные-из-openstreetmap.html</link><guid isPermaLink="false">BlogPosts/Production/TLDR/Экспортируем нужные нам данные из openStreetMap.md</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Sun, 14 Jul 2024 14:22:22 GMT</pubDate><enclosure url="https://nosoff.info/lib/media/meme.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://nosoff.info/lib/media/meme.jpg&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[index]]></title><description><![CDATA[ 
 <br>Тут что-то будет. (Или уже есть)<br><img alt="Assets/index/IMG_3884.jpeg" src="https://nosoff.info/assets/index/img_3884.jpeg"><br><br><br>Общий список постов:<br><br><br>]]></description><link>https://nosoff.info/index.html</link><guid isPermaLink="false">index.md</guid><dc:creator><![CDATA[Roman A. Nosov]]></dc:creator><pubDate>Sun, 14 Jul 2024 14:29:45 GMT</pubDate><enclosure url="https://nosoff.info/assets/index/img_3884.jpeg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://nosoff.info/assets/index/img_3884.jpeg&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Shorts]]></title><description><![CDATA[ 
 <br><br><br>]]></description><link>https://nosoff.info/shorts.html</link><guid isPermaLink="false">Shorts.md</guid><dc:creator><![CDATA[Roman A. Nosov]]></dc:creator><pubDate>Sun, 14 Jul 2024 14:21:08 GMT</pubDate></item><item><title><![CDATA[TL;DR]]></title><description><![CDATA[ 
 <br><br><br>]]></description><link>https://nosoff.info/tl;dr.html</link><guid isPermaLink="false">TL;DR.md</guid><dc:creator><![CDATA[Roman A. Nosov]]></dc:creator><pubDate>Sun, 14 Jul 2024 14:21:31 GMT</pubDate></item></channel></rss>